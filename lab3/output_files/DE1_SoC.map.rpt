Analysis & Synthesis report for DE1_SoC
Thu Feb 03 14:10:45 2022
Quartus Prime Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Analysis & Synthesis Summary
  3. Analysis & Synthesis Settings
  4. Parallel Compilation
  5. Analysis & Synthesis Source Files Read
  6. Analysis & Synthesis Resource Usage Summary
  7. Analysis & Synthesis Resource Utilization by Entity
  8. General Register Statistics
  9. Multiplexer Restructuring Statistics (Restructuring Performed)
 10. Port Connectivity Checks: "alu_1bit_slice:first|multiplexor4to1:m2"
 11. Port Connectivity Checks: "alu_1bit_slice:first|multiplexor8to1:m1"
 12. Post-Synthesis Netlist Statistics for Top Partition
 13. Elapsed Time Per Partition
 14. Analysis & Synthesis Messages
 15. Analysis & Synthesis Suppressed Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 2017  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.



+-------------------------------------------------------------------------------+
; Analysis & Synthesis Summary                                                  ;
+---------------------------------+---------------------------------------------+
; Analysis & Synthesis Status     ; Successful - Thu Feb 03 14:10:45 2022       ;
; Quartus Prime Version           ; 17.0.0 Build 595 04/25/2017 SJ Lite Edition ;
; Revision Name                   ; DE1_SoC                                     ;
; Top-level Entity Name           ; alu                                         ;
; Family                          ; Cyclone V                                   ;
; Logic utilization (in ALMs)     ; N/A                                         ;
; Total registers                 ; 0                                           ;
; Total pins                      ; 199                                         ;
; Total virtual pins              ; 0                                           ;
; Total block memory bits         ; 0                                           ;
; Total DSP Blocks                ; 0                                           ;
; Total HSSI RX PCSs              ; 0                                           ;
; Total HSSI PMA RX Deserializers ; 0                                           ;
; Total HSSI TX PCSs              ; 0                                           ;
; Total HSSI PMA TX Serializers   ; 0                                           ;
; Total PLLs                      ; 0                                           ;
; Total DLLs                      ; 0                                           ;
+---------------------------------+---------------------------------------------+


+---------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Settings                                                                                             ;
+---------------------------------------------------------------------------------+--------------------+--------------------+
; Option                                                                          ; Setting            ; Default Value      ;
+---------------------------------------------------------------------------------+--------------------+--------------------+
; Device                                                                          ; 5CSEMA5F31C6       ;                    ;
; Top-level entity name                                                           ; alu                ; DE1_SoC            ;
; Family name                                                                     ; Cyclone V          ; Cyclone V          ;
; State Machine Processing                                                        ; User-Encoded       ; Auto               ;
; Use smart compilation                                                           ; Off                ; Off                ;
; Enable parallel Assembler and TimeQuest Timing Analyzer during compilation      ; On                 ; On                 ;
; Enable compact report table                                                     ; Off                ; Off                ;
; Restructure Multiplexers                                                        ; Auto               ; Auto               ;
; MLAB Add Timing Constraints For Mixed-Port Feed-Through Mode Setting Don't Care ; Off                ; Off                ;
; Create Debugging Nodes for IP Cores                                             ; Off                ; Off                ;
; Preserve fewer node names                                                       ; On                 ; On                 ;
; OpenCore Plus hardware evaluation                                               ; Enable             ; Enable             ;
; Verilog Version                                                                 ; Verilog_2001       ; Verilog_2001       ;
; VHDL Version                                                                    ; VHDL_1993          ; VHDL_1993          ;
; Safe State Machine                                                              ; Off                ; Off                ;
; Extract Verilog State Machines                                                  ; On                 ; On                 ;
; Extract VHDL State Machines                                                     ; On                 ; On                 ;
; Ignore Verilog initial constructs                                               ; Off                ; Off                ;
; Iteration limit for constant Verilog loops                                      ; 5000               ; 5000               ;
; Iteration limit for non-constant Verilog loops                                  ; 250                ; 250                ;
; Add Pass-Through Logic to Inferred RAMs                                         ; On                 ; On                 ;
; Infer RAMs from Raw Logic                                                       ; On                 ; On                 ;
; Parallel Synthesis                                                              ; On                 ; On                 ;
; DSP Block Balancing                                                             ; Auto               ; Auto               ;
; NOT Gate Push-Back                                                              ; On                 ; On                 ;
; Power-Up Don't Care                                                             ; On                 ; On                 ;
; Remove Redundant Logic Cells                                                    ; Off                ; Off                ;
; Remove Duplicate Registers                                                      ; On                 ; On                 ;
; Ignore CARRY Buffers                                                            ; Off                ; Off                ;
; Ignore CASCADE Buffers                                                          ; Off                ; Off                ;
; Ignore GLOBAL Buffers                                                           ; Off                ; Off                ;
; Ignore ROW GLOBAL Buffers                                                       ; Off                ; Off                ;
; Ignore LCELL Buffers                                                            ; Off                ; Off                ;
; Ignore SOFT Buffers                                                             ; On                 ; On                 ;
; Limit AHDL Integers to 32 Bits                                                  ; Off                ; Off                ;
; Optimization Technique                                                          ; Balanced           ; Balanced           ;
; Carry Chain Length                                                              ; 70                 ; 70                 ;
; Auto Carry Chains                                                               ; On                 ; On                 ;
; Auto Open-Drain Pins                                                            ; On                 ; On                 ;
; Perform WYSIWYG Primitive Resynthesis                                           ; Off                ; Off                ;
; Auto ROM Replacement                                                            ; On                 ; On                 ;
; Auto RAM Replacement                                                            ; On                 ; On                 ;
; Auto DSP Block Replacement                                                      ; On                 ; On                 ;
; Auto Shift Register Replacement                                                 ; Auto               ; Auto               ;
; Allow Shift Register Merging across Hierarchies                                 ; Auto               ; Auto               ;
; Auto Clock Enable Replacement                                                   ; On                 ; On                 ;
; Strict RAM Replacement                                                          ; Off                ; Off                ;
; Allow Synchronous Control Signals                                               ; On                 ; On                 ;
; Force Use of Synchronous Clear Signals                                          ; Off                ; Off                ;
; Auto Resource Sharing                                                           ; Off                ; Off                ;
; Allow Any RAM Size For Recognition                                              ; Off                ; Off                ;
; Allow Any ROM Size For Recognition                                              ; Off                ; Off                ;
; Allow Any Shift Register Size For Recognition                                   ; Off                ; Off                ;
; Use LogicLock Constraints during Resource Balancing                             ; On                 ; On                 ;
; Ignore translate_off and synthesis_off directives                               ; Off                ; Off                ;
; Timing-Driven Synthesis                                                         ; On                 ; On                 ;
; Report Parameter Settings                                                       ; On                 ; On                 ;
; Report Source Assignments                                                       ; On                 ; On                 ;
; Report Connectivity Checks                                                      ; On                 ; On                 ;
; Ignore Maximum Fan-Out Assignments                                              ; Off                ; Off                ;
; Synchronization Register Chain Length                                           ; 3                  ; 3                  ;
; PowerPlay Power Optimization During Synthesis                                   ; Normal compilation ; Normal compilation ;
; HDL message level                                                               ; Level2             ; Level2             ;
; Suppress Register Optimization Related Messages                                 ; Off                ; Off                ;
; Number of Removed Registers Reported in Synthesis Report                        ; 5000               ; 5000               ;
; Number of Swept Nodes Reported in Synthesis Report                              ; 5000               ; 5000               ;
; Number of Inverted Registers Reported in Synthesis Report                       ; 100                ; 100                ;
; Clock MUX Protection                                                            ; On                 ; On                 ;
; Auto Gated Clock Conversion                                                     ; Off                ; Off                ;
; Block Design Naming                                                             ; Auto               ; Auto               ;
; SDC constraint protection                                                       ; Off                ; Off                ;
; Synthesis Effort                                                                ; Auto               ; Auto               ;
; Shift Register Replacement - Allow Asynchronous Clear Signal                    ; On                 ; On                 ;
; Pre-Mapping Resynthesis Optimization                                            ; Off                ; Off                ;
; Analysis & Synthesis Message Level                                              ; Medium             ; Medium             ;
; Disable Register Merging Across Hierarchies                                     ; Auto               ; Auto               ;
; Resource Aware Inference For Block RAM                                          ; On                 ; On                 ;
; Automatic Parallel Synthesis                                                    ; On                 ; On                 ;
; Partial Reconfiguration Bitstream ID                                            ; Off                ; Off                ;
+---------------------------------------------------------------------------------+--------------------+--------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 12          ;
; Maximum allowed            ; 6           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
+----------------------------+-------------+


+----------------------------------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Source Files Read                                                                                                             ;
+----------------------------------+-----------------+------------------------------+------------------------------------------------------+---------+
; File Name with User-Entered Path ; Used in Netlist ; File Type                    ; File Name with Absolute Path                         ; Library ;
+----------------------------------+-----------------+------------------------------+------------------------------------------------------+---------+
; multiplexors/multiplexor8to1.sv  ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/multiplexors/multiplexor8to1.sv ;         ;
; alu/nor_in64.sv                  ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/alu/nor_in64.sv                 ;         ;
; alu/fullAdder.sv                 ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/alu/fullAdder.sv                ;         ;
; alu/alu_1bit_slice.sv            ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/alu/alu_1bit_slice.sv           ;         ;
; alu/alu.sv                       ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/alu/alu.sv                      ;         ;
; multiplexors/multiplexor4to1.sv  ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/multiplexors/multiplexor4to1.sv ;         ;
; multiplexors/multiplexor2to1.sv  ; yes             ; User SystemVerilog HDL File  ; D:/EE/ee469labs/lab3/multiplexors/multiplexor2to1.sv ;         ;
+----------------------------------+-----------------+------------------------------+------------------------------------------------------+---------+


+--------------------------------------------------------------+
; Analysis & Synthesis Resource Usage Summary                  ;
+---------------------------------------------+----------------+
; Resource                                    ; Usage          ;
+---------------------------------------------+----------------+
; Estimate of Logic utilization (ALMs needed) ; 152            ;
;                                             ;                ;
; Combinational ALUT usage for logic          ; 209            ;
;     -- 7 input functions                    ; 0              ;
;     -- 6 input functions                    ; 94             ;
;     -- 5 input functions                    ; 17             ;
;     -- 4 input functions                    ; 3              ;
;     -- <=3 input functions                  ; 95             ;
;                                             ;                ;
; Dedicated logic registers                   ; 0              ;
;                                             ;                ;
; I/O pins                                    ; 199            ;
;                                             ;                ;
; Total DSP Blocks                            ; 0              ;
;                                             ;                ;
; Maximum fan-out node                        ; cntrl[0]~input ;
; Maximum fan-out                             ; 130            ;
; Total fan-out                               ; 1151           ;
; Average fan-out                             ; 1.90           ;
+---------------------------------------------+----------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Analysis & Synthesis Resource Utilization by Entity                                                                                                                                                                                                       ;
+-------------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+---------------------------------------------------------------------------+-----------------+--------------+
; Compilation Hierarchy Node          ; Combinational ALUTs ; Dedicated Logic Registers ; Block Memory Bits ; DSP Blocks ; Pins ; Virtual Pins ; Full Hierarchy Name                                                       ; Entity Name     ; Library Name ;
+-------------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+---------------------------------------------------------------------------+-----------------+--------------+
; |alu                                ; 209 (1)             ; 0 (0)                     ; 0                 ; 0          ; 199  ; 0            ; |alu                                                                      ; alu             ; work         ;
;    |alu_1bit_slice:first|           ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:first                                                 ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:first|multiplexor4to1:m2                              ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:first|multiplexor4to1:m2|multiplexor2to1:m3           ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:first|multiplexor8to1:m1                              ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:first|multiplexor8to1:m1|multiplexor2to1:m3           ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[10].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[10].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[10].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[10].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[10].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[10].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[10].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[11].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[11].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[11].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[11].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[11].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[11].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[12].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[12].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[12].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[12].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[12].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[12].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[12].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[13].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[13].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[13].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[13].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[13].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[13].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[14].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[14].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[14].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[14].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[14].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[14].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[14].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[15].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[15].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[15].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[15].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[15].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[15].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[16].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[16].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[16].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[16].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[16].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[16].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[16].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[17].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[17].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[17].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[17].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[17].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[17].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[18].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[18].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[18].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[18].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[18].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[18].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[18].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[19].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[19].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[19].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[19].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[19].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[19].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[1].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[1].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[1].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[1].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[1].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[1].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[20].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[20].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[20].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[20].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[20].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[20].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[20].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[21].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[21].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[21].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[21].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[21].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[21].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[22].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[22].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[22].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[22].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[22].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[22].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[22].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[23].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[23].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[23].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[23].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[23].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[23].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[24].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[24].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[24].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[24].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[24].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[24].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[24].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[25].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[25].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[25].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[25].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[25].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[25].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[26].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[26].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[26].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[26].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[26].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[26].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[26].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[27].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[27].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[27].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[27].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[27].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[27].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[28].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[28].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[28].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[28].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[28].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[28].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[28].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[29].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[29].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[29].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[29].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[29].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[29].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[2].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[2].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[2].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[2].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[2].alu1|multiplexor4to1:m2|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[2].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[2].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[30].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[30].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[30].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[30].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[30].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[30].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[30].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[31].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[31].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[31].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[31].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[31].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[31].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[32].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[32].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[32].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[32].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[32].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[32].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[32].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[33].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[33].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[33].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[33].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[33].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[33].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[34].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[34].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[34].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[34].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[34].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[34].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[34].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[35].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[35].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[35].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[35].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[35].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[35].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[36].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[36].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[36].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[36].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[36].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[36].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[36].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[37].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[37].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[37].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[37].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[37].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[37].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[38].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[38].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[38].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[38].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[38].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[38].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[38].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[39].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[39].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[39].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[39].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[39].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[39].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[3].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[3].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[3].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[3].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[3].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[3].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[40].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[40].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[40].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[40].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[40].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[40].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[40].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[41].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[41].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[41].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[41].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[41].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[41].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[42].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[42].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[42].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[42].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[42].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[42].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[42].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[43].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[43].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[43].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[43].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[43].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[43].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[44].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[44].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[44].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[44].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[44].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[44].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[44].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[45].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[45].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[45].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[45].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[45].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[45].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[46].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[46].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[46].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[46].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[46].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[46].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[46].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[47].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[47].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[47].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[47].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[47].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[47].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[48].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[48].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[48].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[48].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[48].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[48].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[48].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[49].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[49].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[49].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[49].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[49].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[49].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[4].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[4].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[4].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[4].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[4].alu1|multiplexor4to1:m2|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[4].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[4].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[50].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[50].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[50].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[50].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[50].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[50].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[50].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[51].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[51].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[51].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[51].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[51].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[51].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[52].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[52].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[52].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[52].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[52].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[52].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[52].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[53].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[53].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[53].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[53].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[53].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[53].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[54].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[54].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[54].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[54].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[54].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[54].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[54].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[55].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[55].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[55].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[55].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[55].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[55].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[56].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[56].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[56].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[56].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[56].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[56].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[56].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[57].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[57].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[57].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[57].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[57].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[57].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[58].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[58].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[58].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[58].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[58].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[58].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[58].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[59].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[59].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[59].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[59].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[59].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[59].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[5].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[5].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[5].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[5].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[5].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[5].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[60].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[60].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[60].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[60].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[60].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[60].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[60].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[61].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[61].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[61].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[61].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[61].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[61].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[62].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[62].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[62].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[62].alu1|multiplexor4to1:m2|multiplexor2to1:m1 ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[62].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[62].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[62].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[63].alu1| ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[63].alu1                                       ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[63].alu1|multiplexor4to1:m2                    ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m3|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[63].alu1|multiplexor4to1:m2|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[63].alu1|multiplexor8to1:m1                    ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[63].alu1|multiplexor8to1:m1|multiplexor2to1:m3 ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[6].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[6].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[6].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[6].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[6].alu1|multiplexor4to1:m2|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[6].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[6].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[7].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[7].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[7].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[7].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[7].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[7].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[8].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[8].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[8].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[8].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[8].alu1|multiplexor4to1:m2|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[8].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[8].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |alu_1bit_slice:slices[9].alu1|  ; 3 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[9].alu1                                        ; alu_1bit_slice  ; work         ;
;       |multiplexor4to1:m2|          ; 2 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[9].alu1|multiplexor4to1:m2                     ; multiplexor4to1 ; work         ;
;          |multiplexor2to1:m1|       ; 2 (2)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[9].alu1|multiplexor4to1:m2|multiplexor2to1:m1  ; multiplexor2to1 ; work         ;
;       |multiplexor8to1:m1|          ; 1 (0)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[9].alu1|multiplexor8to1:m1                     ; multiplexor8to1 ; work         ;
;          |multiplexor2to1:m3|       ; 1 (1)               ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|alu_1bit_slice:slices[9].alu1|multiplexor8to1:m1|multiplexor2to1:m3  ; multiplexor2to1 ; work         ;
;    |nor_in64:zeroCheck|             ; 17 (17)             ; 0 (0)                     ; 0                 ; 0          ; 0    ; 0            ; |alu|nor_in64:zeroCheck                                                   ; nor_in64        ; work         ;
+-------------------------------------+---------------------+---------------------------+-------------------+------------+------+--------------+---------------------------------------------------------------------------+-----------------+--------------+
Note: For table entries with two numbers listed, the numbers in parentheses indicate the number of resources of the given type used by the specific entity alone. The numbers listed outside of parentheses indicate the total resources of the given type used by the specific entity and all of its sub-entities in the hierarchy.


+------------------------------------------------------+
; General Register Statistics                          ;
+----------------------------------------------+-------+
; Statistic                                    ; Value ;
+----------------------------------------------+-------+
; Total registers                              ; 0     ;
; Number of registers using Synchronous Clear  ; 0     ;
; Number of registers using Synchronous Load   ; 0     ;
; Number of registers using Asynchronous Clear ; 0     ;
; Number of registers using Asynchronous Load  ; 0     ;
; Number of registers using Clock Enable       ; 0     ;
; Number of registers using Preset             ; 0     ;
+----------------------------------------------+-------+


+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Multiplexer Restructuring Statistics (Restructuring Performed)                                                                                                                               ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+--------------------------------------------------------------------------------+
; Multiplexer Inputs ; Bus Width ; Baseline Area ; Area if Restructured ; Saving if Restructured ; Registered ; Example Multiplexer Output                                                     ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+--------------------------------------------------------------------------------+
; 6:1                ; 64 bits   ; 256 LEs       ; 256 LEs              ; 0 LEs                  ; No         ; |alu|alu_1bit_slice:slices[8].alu1|multiplexor8to1:m1|multiplexor2to1:m3|step3 ;
+--------------------+-----------+---------------+----------------------+------------------------+------------+--------------------------------------------------------------------------------+


+---------------------------------------------------------------------+
; Port Connectivity Checks: "alu_1bit_slice:first|multiplexor4to1:m2" ;
+----------+-------+----------+---------------------------------------+
; Port     ; Type  ; Severity ; Details                               ;
+----------+-------+----------+---------------------------------------+
; in[1..0] ; Input ; Info     ; Stuck at GND                          ;
+----------+-------+----------+---------------------------------------+


+---------------------------------------------------------------------+
; Port Connectivity Checks: "alu_1bit_slice:first|multiplexor8to1:m1" ;
+-------+-------+----------+------------------------------------------+
; Port  ; Type  ; Severity ; Details                                  ;
+-------+-------+----------+------------------------------------------+
; in[7] ; Input ; Info     ; Stuck at GND                             ;
; in[1] ; Input ; Info     ; Stuck at GND                             ;
+-------+-------+----------+------------------------------------------+


+-----------------------------------------------------+
; Post-Synthesis Netlist Statistics for Top Partition ;
+-----------------------+-----------------------------+
; Type                  ; Count                       ;
+-----------------------+-----------------------------+
; arriav_lcell_comb     ; 209                         ;
;     normal            ; 209                         ;
;         2 data inputs ; 62                          ;
;         3 data inputs ; 33                          ;
;         4 data inputs ; 3                           ;
;         5 data inputs ; 17                          ;
;         6 data inputs ; 94                          ;
; boundary_port         ; 199                         ;
;                       ;                             ;
; Max LUT depth         ; 34.00                       ;
; Average LUT depth     ; 23.01                       ;
+-----------------------+-----------------------------+


+-------------------------------+
; Elapsed Time Per Partition    ;
+----------------+--------------+
; Partition Name ; Elapsed Time ;
+----------------+--------------+
; Top            ; 00:00:02     ;
+----------------+--------------+


+-------------------------------+
; Analysis & Synthesis Messages ;
+-------------------------------+
Info: *******************************************************************
Info: Running Quartus Prime Analysis & Synthesis
    Info: Version 17.0.0 Build 595 04/25/2017 SJ Lite Edition
    Info: Processing started: Thu Feb 03 14:10:30 2022
Info: Command: quartus_map --read_settings_files=on --write_settings_files=off DE1_SoC -c DE1_SoC
Info (20030): Parallel compilation is enabled and will use 6 of the 6 processors detected
Info (12021): Found 1 design units, including 1 entities, in source file multiplexors/multiplexor8to1.sv
    Info (12023): Found entity 1: multiplexor8to1 File: D:/EE/ee469labs/lab3/multiplexors/multiplexor8to1.sv Line: 7
Info (12021): Found 2 design units, including 2 entities, in source file controlsignals.sv
    Info (12023): Found entity 1: controlSignals File: D:/EE/ee469labs/lab3/controlSignals.sv Line: 9
    Info (12023): Found entity 2: controlSignals_testbench File: D:/EE/ee469labs/lab3/controlSignals.sv Line: 143
Info (12021): Found 2 design units, including 2 entities, in source file alu/nor_in64.sv
    Info (12023): Found entity 1: nor_in64 File: D:/EE/ee469labs/lab3/alu/nor_in64.sv Line: 8
    Info (12023): Found entity 2: nor_in64_testbench File: D:/EE/ee469labs/lab3/alu/nor_in64.sv Line: 30
Info (12021): Found 4 design units, including 4 entities, in source file alu/math.sv
    Info (12023): Found entity 1: mult File: D:/EE/ee469labs/lab3/alu/math.sv Line: 6
    Info (12023): Found entity 2: shifter File: D:/EE/ee469labs/lab3/alu/math.sv Line: 36
    Info (12023): Found entity 3: shifter_testbench File: D:/EE/ee469labs/lab3/alu/math.sv Line: 51
    Info (12023): Found entity 4: mult_testbench File: D:/EE/ee469labs/lab3/alu/math.sv Line: 71
Info (12021): Found 1 design units, including 1 entities, in source file alu/fulladder.sv
    Info (12023): Found entity 1: fullAdder File: D:/EE/ee469labs/lab3/alu/fullAdder.sv Line: 11
Info (12021): Found 2 design units, including 2 entities, in source file alu/alu_1bit_slice.sv
    Info (12023): Found entity 1: alu_1bit_slice File: D:/EE/ee469labs/lab3/alu/alu_1bit_slice.sv Line: 21
    Info (12023): Found entity 2: alu1bit_test File: D:/EE/ee469labs/lab3/alu/alu_1bit_slice.sv Line: 78
Info (12021): Found 1 design units, including 1 entities, in source file alu/alu.sv
    Info (12023): Found entity 1: alu File: D:/EE/ee469labs/lab3/alu/alu.sv Line: 10
Info (12021): Found 2 design units, including 2 entities, in source file decoders/decoder5to32.sv
    Info (12023): Found entity 1: decoder5to32 File: D:/EE/ee469labs/lab3/decoders/decoder5to32.sv Line: 2
    Info (12023): Found entity 2: decoder5to32_testbench File: D:/EE/ee469labs/lab3/decoders/decoder5to32.sv Line: 17
Info (12021): Found 1 design units, including 1 entities, in source file decoders/decoder4to16.sv
    Info (12023): Found entity 1: decoder4to16 File: D:/EE/ee469labs/lab3/decoders/decoder4to16.sv Line: 2
Info (12021): Found 2 design units, including 2 entities, in source file decoders/decoder2to4.sv
    Info (12023): Found entity 1: decoder2to4 File: D:/EE/ee469labs/lab3/decoders/decoder2to4.sv Line: 2
    Info (12023): Found entity 2: decoder2to4_testbench File: D:/EE/ee469labs/lab3/decoders/decoder2to4.sv Line: 17
Info (12021): Found 2 design units, including 2 entities, in source file decoders/decoder1to2.sv
    Info (12023): Found entity 1: decoder1to2 File: D:/EE/ee469labs/lab3/decoders/decoder1to2.sv Line: 4
    Info (12023): Found entity 2: decoder1to2_testbench File: D:/EE/ee469labs/lab3/decoders/decoder1to2.sv Line: 15
Info (12021): Found 1 design units, including 1 entities, in source file multiplexors/multiplexor64of32to1.sv
    Info (12023): Found entity 1: multiplexor64of32to1 File: D:/EE/ee469labs/lab3/multiplexors/multiplexor64of32to1.sv Line: 3
Info (12021): Found 2 design units, including 2 entities, in source file multiplexors/multiplexor32to1.sv
    Info (12023): Found entity 1: multiplexor32to1 File: D:/EE/ee469labs/lab3/multiplexors/multiplexor32to1.sv Line: 7
    Info (12023): Found entity 2: mux32_1_testbench File: D:/EE/ee469labs/lab3/multiplexors/multiplexor32to1.sv Line: 19
Info (12021): Found 2 design units, including 2 entities, in source file multiplexors/multiplexor16to1.sv
    Info (12023): Found entity 1: multiplexor16to1 File: D:/EE/ee469labs/lab3/multiplexors/multiplexor16to1.sv Line: 7
    Info (12023): Found entity 2: mux16_1_testbench File: D:/EE/ee469labs/lab3/multiplexors/multiplexor16to1.sv Line: 23
Info (12021): Found 2 design units, including 2 entities, in source file multiplexors/multiplexor4to1.sv
    Info (12023): Found entity 1: multiplexor4to1 File: D:/EE/ee469labs/lab3/multiplexors/multiplexor4to1.sv Line: 8
    Info (12023): Found entity 2: mux4_1_testbench File: D:/EE/ee469labs/lab3/multiplexors/multiplexor4to1.sv Line: 21
Info (12021): Found 2 design units, including 2 entities, in source file multiplexors/multiplexor2to1.sv
    Info (12023): Found entity 1: multiplexor2to1 File: D:/EE/ee469labs/lab3/multiplexors/multiplexor2to1.sv Line: 7
    Info (12023): Found entity 2: multiplexor2to1_testbench File: D:/EE/ee469labs/lab3/multiplexors/multiplexor2to1.sv Line: 21
Info (12021): Found 1 design units, including 1 entities, in source file registers/regfile.sv
    Info (12023): Found entity 1: regfile File: D:/EE/ee469labs/lab3/registers/regfile.sv Line: 12
Info (12021): Found 2 design units, including 2 entities, in source file instructmem.sv
    Info (12023): Found entity 1: instructmem File: D:/EE/ee469labs/lab3/instructmem.sv Line: 17
    Info (12023): Found entity 2: instructmem_testbench File: D:/EE/ee469labs/lab3/instructmem.sv Line: 57
Info (12021): Found 2 design units, including 2 entities, in source file datamem.sv
    Info (12023): Found entity 1: datamem File: D:/EE/ee469labs/lab3/datamem.sv Line: 12
    Info (12023): Found entity 2: datamem_testbench File: D:/EE/ee469labs/lab3/datamem.sv Line: 70
Warning (12019): Can't analyze file -- file DE1_SoC.sv is missing
Info (12127): Elaborating entity "alu" for the top level hierarchy
Info (12128): Elaborating entity "alu_1bit_slice" for hierarchy "alu_1bit_slice:first" File: D:/EE/ee469labs/lab3/alu/alu.sv Line: 21
Info (12128): Elaborating entity "fullAdder" for hierarchy "alu_1bit_slice:first|fullAdder:f1" File: D:/EE/ee469labs/lab3/alu/alu_1bit_slice.sv Line: 42
Info (12128): Elaborating entity "multiplexor8to1" for hierarchy "alu_1bit_slice:first|multiplexor8to1:m1" File: D:/EE/ee469labs/lab3/alu/alu_1bit_slice.sv Line: 72
Info (12128): Elaborating entity "multiplexor4to1" for hierarchy "alu_1bit_slice:first|multiplexor8to1:m1|multiplexor4to1:m1" File: D:/EE/ee469labs/lab3/multiplexors/multiplexor8to1.sv Line: 14
Info (12128): Elaborating entity "multiplexor2to1" for hierarchy "alu_1bit_slice:first|multiplexor8to1:m1|multiplexor4to1:m1|multiplexor2to1:m2" File: D:/EE/ee469labs/lab3/multiplexors/multiplexor4to1.sv Line: 15
Info (12128): Elaborating entity "nor_in64" for hierarchy "nor_in64:zeroCheck" File: D:/EE/ee469labs/lab3/alu/alu.sv Line: 34
Info (286030): Timing-Driven Synthesis is running
Info (144001): Generated suppressed messages file D:/EE/ee469labs/lab3/output_files/DE1_SoC.map.smsg
Info (16010): Generating hard_block partition "hard_block:auto_generated_inst"
    Info (16011): Adding 0 node(s), including 0 DDIO, 0 PLL, 0 transceiver and 0 LCELL
Info (21057): Implemented 408 device resources after synthesis - the final resource count might be different
    Info (21058): Implemented 131 input pins
    Info (21059): Implemented 68 output pins
    Info (21061): Implemented 209 logic cells
Info: Quartus Prime Analysis & Synthesis was successful. 0 errors, 1 warning
    Info: Peak virtual memory: 4836 megabytes
    Info: Processing ended: Thu Feb 03 14:10:45 2022
    Info: Elapsed time: 00:00:15
    Info: Total CPU time (on all processors): 00:00:31


+------------------------------------------+
; Analysis & Synthesis Suppressed Messages ;
+------------------------------------------+
The suppressed messages can be found in D:/EE/ee469labs/lab3/output_files/DE1_SoC.map.smsg.


